/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define DEF_L 0
#define NAV_L 1
#define SYM_L 2
#define NUM_L 3

/* Shortcuts */
#define CUT LC(X)
#define COPY LC(C)
#define PASTE LC(V)
#define UNDO LC(Z)
#define SALL LC(A)

/* Key position groups */
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 23 24 25
#define THUMBS 26 27 28 29

/* Behavior Settings */
&sk {
  release-after-ms = <250>;
  quick-release;
};

&sl {
  release-after-ms = <250>;
};

/ {
    behaviors {
        mtl: mod_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
	    hold-trigger-on-release;
        };
        mtr: mod_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
	    hold-trigger-on-release;
        };
        btd0: bluetooth_tap_dance0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_SEL 0>;
        };
        btd1: bluetooth_tap_dance1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_SEL 1>;
        };
        btd2: bluetooth_tap_dance2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_SEL 2>;
        };
        btd3: bluetooth_tap_dance3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_SEL 3>;
        };
        btd4: bluetooth_tap_dance4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_SEL 4>;
        };
    };
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NAV_L SYM_L>;
            then-layer = <NUM_L>;
        };
    };
    combos {
        compatible = "zmk,combos";

	/*
	   0   1   2   3   4          5   6   7   8   9
	  10  11  12  13  14         15  16  17  18  19
	      20  21  22                 23  24  25
		      26  27          28  29
	*/

        /* Letters */
        v { key-positions = <1 2>; bindings = <&kp V>; layers = <DEF_L>; };
        q { key-positions = <2 3>; bindings = <&kp Q>; layers = <DEF_L>; };
        z { key-positions = <20 21>; bindings = <&kp Z>; layers = <DEF_L>; };

        /* Brackets */
        lpar { key-positions = <3 13>; bindings = <&kp LPAR>; layers = <DEF_L SYM_L NUM_L>; };
        rpar { key-positions = <6 16>; bindings = <&kp RPAR>; layers = <DEF_L SYM_L NUM_L>; };
        lbrc { key-positions = <2 12>; bindings = <&kp LBRC>; layers = <DEF_L SYM_L NUM_L>; };
        rbrc { key-positions = <7 17>; bindings = <&kp RBRC>; layers = <DEF_L SYM_L NUM_L>; };
        lbkt { key-positions = <1 11>; bindings = <&kp LBKT>; layers = <DEF_L SYM_L NUM_L>; };
        rbkt { key-positions = <8 18>; bindings = <&kp RBKT>; layers = <DEF_L SYM_L NUM_L>; };

        /* Convenience */
        del { key-positions = <4 14>; bindings = <&kp DEL>; };
        esc { key-positions = <5 15>; bindings = <&kp ESC>; };
        slall { key-positions = <20 21>; bindings = <&kp SALL>; layers = <NAV_L>; };
        tab { key-positions = <11 12 13>; bindings = <&kp TAB>; };
        enter { key-positions = <16 17 18>; bindings = <&kp ENTER>; };
        bspc { key-positions = <7 8>; bindings = <&kp BSPC>; layers = <SYM_L NAV_L NUM_L>; };

	btclr { key-positions = <1 2 3>; bindings = <&bt BT_CLR>; layers = <NUM_L>; };

    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &kp X         &kp C         &kp L         &kp F         &kp P           &kp K         &kp Y         &kp O         &kp U         &kp QUOT
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &mtl LGUI R   &mtl LALT S   &mtl LCTRL N  &mtl LSHFT T  &kp B           &kp J         &mtr RSHFT H  &mtr RCTRL E  &mtr LALT I   &mtr LGUI A
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯ ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
                  &kp W         &kp M         &kp G                                       &kp D         &kp COMMA     &kp DOT
//              ╰─────────────┴─────────────┼─────────────┼─────────────╮ ╭─────────────┼─────────────┼─────────────┴─────────────╯
                                              &sl NAV_L     &kp SPACE       &mt LSHFT ESC &sl SYM_L
//                                          ╰─────────────┴─────────────╯ ╰─────────────┴─────────────╯
            >;
        };

        nav_layer {
	    label = "Nav";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &kp F5        &kp F6        &kp F7        &kp F8        &none           &kp PG_UP     &kp ESC       &kp UP        &kp TAB       &kp HOME
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LGUI      &kp LALT      &kp LSHFT     &kp LCTL      &kp UNDO        &kp PG_DN     &kp LEFT      &kp ENTER     &kp RIGHT     &kp END
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯ ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
                  &kp CUT       &kp COPY      &kp PASTE                                   &kp BSPC      &kp DOWN      &kp DEL
//              ╰─────────────┴─────────────┼─────────────┼─────────────╮ ╭─────────────┼─────────────┼─────────────┴─────────────╯
                                              &trans        &trans          &trans        &trans
//                                          ╰─────────────┴─────────────╯ ╰─────────────┴─────────────╯
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET     &kp AMPS      &kp SEMI      &kp COLON     &kp QMARK
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp TILDE     &kp EQUAL     &kp MINUS     &kp FSLH      &kp GRAVE       &kp BSLH      &kp LCTRL     &kp LSHFT     &kp LALT      &kp LGUI
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯ ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
                  &kp UNDER     &kp PLUS      &kp ASTRK                                   &kp PIPE      &kp LT        &kp GT
//              ╰─────────────┴─────────────┼─────────────┼─────────────╮ ╭─────────────┼─────────────┼─────────────┴─────────────╯
                                              &trans        &trans          &trans        &trans
//                                          ╰─────────────┴─────────────╯ ╰─────────────┴─────────────╯
            >;
        };

        num {
            label = "Num";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &btd0         &btd1         &btd2         &btd3         &btd4           &none         &none         &none         &kp COLON     &none
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &mtl LGUI N1  &mtl LALT N2  &mtl LSHFT N3 &mtl LCTRL N4 &kp N5          &kp N6        &mtr LCTRL N7 &mtr LSHFT N8 &mtr LALT N9  &mtr LGUI N0
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯ ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
                  &none         &none         &none                                       &none         &kp COMMA     &kp DOT
//              ╰─────────────┴─────────────┼─────────────┼─────────────╮ ╭─────────────┼─────────────┼─────────────┴─────────────╯
                                              &trans        &trans          &trans        &trans
//                                          ╰─────────────┴─────────────╯ ╰─────────────┴─────────────╯
            >;
        };
    };
};
